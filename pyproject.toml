[project]
name = "repid"
description = "Repid framework: simple to use, fast to run and extensible to adopt job scheduler"
authors = [{ name = "aleksul", email = "me@aleksul.space" }]
dependencies = [
    "orjson>=3.7.11,<4.0.0",
    "typing-extensions>=4.3.0,<5.0.0; python_version < \"3.10\"",
]
requires-python = ">=3.8"
readme = "README.md"
dynamic = ["version"]
license = { text = "MIT" }

[project.urls]
repository    = "https://github.com/aleksul/repid"
documentation = "https://aleksul.github.io/repid"
funding       = "https://github.com/sponsors/aleksul"
tracker       = "https://github.com/aleksul/repid/issues"

[project.optional-dependencies]
amqp  = ["aiormq<7.0.0,>=6.4.0"]
redis = ["redis<5.0.0,>=4.3.3"]
cron  = ["croniter<2.0.0,>=1.3.4"]

[tool.pdm]
version = { source = "scm" }

[tool.pdm.build]
includes = ["repid"]

[tool.pdm.dev-dependencies]
format = ["black", "isort"]
lint = [
    "mypy",
    "types-orjson",
    "types-redis",
    "types-croniter",
    "flake8",
    "flake8-bugbear",
    "flake8-builtins",
    "flake8-pyproject",
    "flake8-type-checking",
    "flake8-logging-format",
    "yesqa",
]
tests = [
    "pytest",
    "pytest-asyncio",
    "pytest-pretty",
    "pytest-clarity",
    "pytest-lazy-fixture",
    "pytest-docker-tools",
    "pytest-cov",
    "hypothesis",
    "pydantic<2.0.0,>=1.10.0",
]
pre-commit = ["pre-commit"]
docs = ["mkdocs-material", "mike", "setuptools>=65.5.1"]

[tool.coverage]
report.fail_under = 70
report.exclude_lines = [
    '\.\.\.',
    'if TYPE_CHECKING:',
    'pragma: no cover',
]

[tool.black]
line-length = 100

[tool.isort]
profile           = "black"
multi_line_output = 3

[tool.mypy]
disallow_untyped_defs   = true
disallow_any_unimported = true
no_implicit_optional    = true
check_untyped_defs      = true
warn_return_any         = true
warn_unused_ignores     = true
show_error_codes        = true

[[tool.mypy.overrides]]
module                  = "tests.*"
disallow_any_unimported = false

[[tool.mypy.overrides]]
module                 = ["pytest_docker_tools", "pytest_lazyfixture"]
ignore_missing_imports = true

[tool.flake8]
max-line-length = 100
per-file-ignores = [
    "__init__.py:F401",
    "tests/*:TC",
    "protocols.py:B008",
]
ignore = "W503,PT013"
enable-extensions = ["TC", "TC1"]

[tool.pytest.ini_options]
asyncio_mode = "auto"

[build-system]
requires      = ["pdm-pep517>=1.0.0"]
build-backend = "pdm.pep517.api"
